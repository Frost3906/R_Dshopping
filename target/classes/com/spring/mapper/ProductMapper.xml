<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.ProductMapper">

	<select id="getList" resultType="com.spring.domain.ProductVO">
		select * 
		from product
	</select>
	
	<select id="getProduct" resultType="com.spring.domain.ProductVO">
		select * from product where p_code = #{code}
	</select>
	
	<select id="keySearchCategoryList" resultType="com.spring.domain.ProductVO" parameterType="com.spring.domain.CategoryKeySearchVO">
		select * from ( 
			select <![CDATA[rownum rno,]]>product.* 
			from product 
			where 
				<if test="category2==null">
					p_category1 = #{category1}
				</if> 
				<if test="category2!=null and category3==null">
					p_category1 = #{category1} and p_category2 = #{category2}
				</if>
				<if test="category3!=null">
					p_category1 = #{category1} and p_category2 = #{category2} and p_category3 = #{category3}
				</if>
				and 
				p_code in (
					select p_code 
					from searchList 
					where 
						<foreach collection="keywordList" item="keyList" separator=" or ">
							p_name like upper('%'||#{keyList}||'%') or 
							p_code like '%'||#{keyList}||'%' or 
							p_content like upper('%'||#{keyList}||'%') or 
							p_category1 like upper('%'||#{keyList}||'%') or 
							p_category2 like upper('%'||#{keyList}||'%') or 
							p_category3 like upper('%'||#{keyList}||'%') 
						</foreach>
				)
		) where <![CDATA[rno>(#{pageNum}-1)*#{amount} and rno<=#{pageNum}*#{amount}]]>
	</select>
	
	<select id="keySearchCategoryCount" resultType="int" parameterType="com.spring.domain.CategoryKeySearchVO">
		select count(*) from ( 
			select product.* 
			from product 
			where 
				<if test="category2==null">
					p_category1 = #{category1}
				</if> 
				<if test="category2!=null and category3==null">
					p_category1 = #{category1} and p_category2 = #{category2}
				</if>
				<if test="category3!=null">
					p_category1 = #{category1} and p_category2 = #{category2} and p_category3 = #{category3}
				</if>
				and 
				p_code in (
					select p_code 
					from searchList 
					where 
						<foreach collection="keywordList" item="keyList" separator=" or ">
							p_name like upper('%'||#{keyList}||'%') or 
							p_code like '%'||#{keyList}||'%' or 
							p_content like upper('%'||#{keyList}||'%') or 
							p_category1 like upper('%'||#{keyList}||'%') or 
							p_category2 like upper('%'||#{keyList}||'%') or 
							p_category3 like upper('%'||#{keyList}||'%') 
						</foreach>
				)
		)
	</select>
	
	<select id="searchCategoryList" resultType="com.spring.domain.ProductVO">
		select * from ( 
			select <![CDATA[rownum rno,]]>product.* 
			from product 
			where 
				<if test="category2==null">
					p_category1 = #{category1}
				</if> 
				<if test="category2!=null and category3==null">
					p_category1 = #{category1} and p_category2 = #{category2}
				</if>
				<if test="category3!=null">
					p_category1 = #{category1} and p_category2 = #{category2} and p_category3 = #{category3}
				</if>
		) where <![CDATA[rno>(#{pageNum}-1)*#{amount} and rno<=#{pageNum}*#{amount}]]>
	</select>
	
	<select id="searchCategory2" resultType="string">
		select distinct p_category2 
		from product 
		where p_category1 = #{category1} 
		order by p_category2 ASC
	</select>
	
	<select id="searchCategory3" resultType="string">
		select distinct p_category3 
		from product 
		where p_category2 = #{category2} and p_category1 = #{category1} 
		order by p_category3 ASC
	</select>
	
	<select id="searchKeyword" resultType="com.spring.domain.ProductVO" parameterType="java.util.List">
		select * from (
			select <![CDATA[rownum rno,]]>product.* from product where p_code in 
			(select p_code 
			from searchList 
			where 
			<foreach collection="keywordList" item="keyList" separator=" or ">
				p_name like upper('%'||#{keyList}||'%') or 
				p_code like '%'||#{keyList}||'%' or 
				p_content like upper('%'||#{keyList}||'%') or 
				p_category1 like upper('%'||#{keyList}||'%') or 
				p_category2 like upper('%'||#{keyList}||'%') or 
				p_category3 like upper('%'||#{keyList}||'%') 
			</foreach>
			)
		) where <![CDATA[rno>(#{pageNum}-1)*#{amount} and rno<=#{pageNum}*#{amount}]]>
	</select>
	
	<select id="searchCount" resultType="int" parameterType="java.util.List">
		select count(*) from product where p_code in 
		(select p_code 
		from searchList 
		where 
		<foreach collection="keywordList" item="keyList" separator=" or ">
			p_name like upper('%'||#{keyList}||'%') or 
			p_code like '%'||#{keyList}||'%' or 
			p_content like upper('%'||#{keyList}||'%') or 
			p_category1 like upper('%'||#{keyList}||'%') or 
			p_category2 like upper('%'||#{keyList}||'%') or 
			p_category3 like upper('%'||#{keyList}||'%') 
		</foreach>
		)
	</select>
	
	<select id="categoryCount" resultType="int" parameterType="java.util.List">
		select count(*) 
		from product 
		where
			<if test="category2==null">
				p_category1 = #{category1}
			</if> 
			<if test="category2!=null and category3==null">
				p_category1 = #{category1} and p_category2 = #{category2}
			</if>
			<if test="category3!=null">
				p_category1 = #{category1} and p_category2 = #{category2} and p_category3 = #{category3}
			</if>
	</select>
	
	<select id="homeCategoryCount" resultType="int">
		select count(distinct p_category1) from product
	</select>
	
	<select id="homeCategoryList" resultType="string">
		select distinct p_category1 from product
	</select>

	<!-- 상품 등록 sql -->
	<insert id="addProduct">
		insert into product(p_code,p_name,p_price,p_stock,p_content,p_category1,p_category2,p_category3,property) values(#{p_code},#{p_name},#{p_price},#{p_stock},#{p_content},#{p_category1},#{p_category2},#{p_category3},#{property})
	</insert>

	<!-- 장바구니 담는 sql -->
	<insert id="addCart">
		insert into cart(cartNum,email,p_code,cart_Stock) values(cart_seq.nextval,#{email},#{p_code},#{cart_Stock})
	</insert>
	
	<select id="cartList" resultType="com.spring.domain.CartListVO">
		select
     		row_number() over(order by c.p_code desc) as num,
     		c.cartNum, c.email, c.p_code, c.cart_Stock, c.addDate,
     		p.p_name, p.p_price
 		from cart c
     		inner join product p
         	on c.p_code = p.p_code   
     	where c.email = #{email}
	</select>
	
	
	<!-- 카트 정보 갱신 -->
	<update id="updateCart">
		update cart 
		set cart_Stock = #{cart_Stock}
		where cartNum = #{cartNum} 
	</update>
	
	<!-- 카트 물품 삭제 -->
	<delete id="removeFromCart">
		delete from cart
		where cartNum = #{cartNum} and email = #{email}
	</delete>
	
	
	<!-- 리뷰 관련 쿼리 -->
	<select id="listReview" resultType="com.spring.domain.ReviewVO">
		select * from review where p_code = #{p_code} order by reviewid desc
	</select>
	
	<insert id="writeReview">
		insert into review(reviewid,p_code,title,p_rating,content,email) values(seq_review_id.nextval,#{p_code},#{title},#{p_rating},#{content},#{email})
	</insert>
	
	<update id="productModify">
		update product
		set p_name = #{p_name},
		    p_price = #{p_price},
		    p_stock = #{p_stock},
		    p_content = #{p_content},
		    p_category1 = #{p_category1},
		    p_category2 = #{p_category2},
		    p_category3 = #{p_category3},
		    property = #{property}
		where p_code = #{p_code}
	</update>
	
	<!-- 평점 계산 -->
	<update id="updateStar">
		update product 
		set p_rating = (select sum(p_rating) from review where p_code = #{p_code})/(select count(*) from review where p_code = #{p_code})
		where p_code = #{p_code}
	</update>
	
	
</mapper>